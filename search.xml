<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>24个常见的逻辑谬误</title>
      <link href="/2019/01/18/24miuwu/"/>
      <url>/2019/01/18/24miuwu/</url>
      
        <content type="html"><![CDATA[<h1 id="24个常见的逻辑谬误"><a href="#24个常见的逻辑谬误" class="headerlink" title="24个常见的逻辑谬误"></a>24个常见的逻辑谬误</h1><p>不依据逻辑的议论，尤其是指论证中不符合逻辑的推论。逻辑谬误分为形式逻辑谬误与非形式逻辑谬误。非形式逻辑谬误，实质上就是前提错误谬误。<br><img src="/2019/01/18/24miuwu/wu.jpg" alt=" "></p><h5 id="目录："><a href="#目录：" class="headerlink" title="目录："></a>目录：</h5><p>第一条：稻草人谬误<br>第二条：错误归因<br>第三条：诉诸感情<br>第四条：谬误之谬误<br>第五条：滑坡谬误<br>第六条：人身攻击<br>第七条：诉诸虚伪<br>第八条：个人怀疑<br>第九条：片面辩护（迷信谬误）<br>第十条：诱导性问题<br>第十一条：举证责任<br>第十二条：语义模糊<br>第十三条：赌徒谬误<br>第十四条：诉诸主流思想<br>第十五条：诉诸权威<br>第十六条：合成谬误<br>第十七条：没有真正的苏格兰人<br>第十八条：基因谬误<br>第十九条：非黑即白<br>第二十条：窃取论点<br>第二十一条：诉诸自然<br>第二十二条：轶事证据<br>第二十三条：德克萨斯神枪手<br>第二十四条：中间立场</p><p>===============================</p><h5 id="第一条：稻草人谬误-Strawman"><a href="#第一条：稻草人谬误-Strawman" class="headerlink" title="第一条：稻草人谬误 Strawman"></a>第一条：稻草人谬误 Strawman</h5><p>你歪曲了别人的观点，使你自己能够更加轻松的攻击别人。<br>你夸张、歪曲，甚至凭空创造了别人的观点，来让你本身的观点显得更加合理。这是一种极端不诚实的行为，这不但影响了理性的讨论，也影响了你自己观点的可信度。因为如果你可以负面的歪曲别人的观点，你就有可能从正面歪曲自己的观点。<br>例子：小明说国家应该投入更多的预算来发展教育行业，小红回复到：“想不到你这么不爱国，居然想减少国防开支，让外国列强有机可乘。” 小红就犯了稻草人谬误。</p><hr><h5 id="第二条：错误归因-False-Cause"><a href="#第二条：错误归因-False-Cause" class="headerlink" title="第二条：错误归因 False Cause"></a>第二条：错误归因 False Cause</h5><p>你从两个事物可能存在相关性，就得出一个事物是造成另一个事物的原因。<br>你看到了两个事物同时存在，就觉得其中一个事物是另一个的起因。你的错误在于，同时存在的两个事物未必有因果关系，可能这两个事物有共同的起因，或者两个事物根本没有因果关系，它们直接的共存只是巧合。一个事情比另一个事情先发生同样不能说明两个事物肯定存在因果性。<br>例子：小红指出，过去几个世纪全球海盗数量减少，全球温度在升高，从而得出是海盗的数量的减少造成了气候变化，海盗能够降低全球温度。小红犯了错误归因的谬误。</p><hr><h5 id="第三条：诉诸感情-Appeal-to-Emotion"><a href="#第三条：诉诸感情-Appeal-to-Emotion" class="headerlink" title="第三条：诉诸感情 Appeal to Emotion"></a>第三条：诉诸感情 Appeal to Emotion</h5><p>你试图通过操作别人的感情来取代一个有力的论述。<br>你操作的感情可能包括恐惧、嫉妒、怜悯、骄傲等等。一个逻辑严谨的论述可能激起别人的情感波动，但是如果只用感情操作而不用逻辑论述，那你就犯了诉诸感情的错误。每个心智健康的人都会受感情影响，所以这种谬误很有效，但这也是为什么这种谬误是低级和不诚实的手段。<br>例子：小红在饭店看到小明吃狗肉，于是上前训斥：“你怎么可以吃狗肉，小狗多么可爱，就像小朋友一样，你忍心伤害小朋友吗？”小红犯了诉诸感情的谬误。</p><hr><h5 id="第四条：谬误之谬误-The-Fallacy-Fallacy"><a href="#第四条：谬误之谬误-The-Fallacy-Fallacy" class="headerlink" title="第四条：谬误之谬误 The Fallacy Fallacy"></a>第四条：谬误之谬误 The Fallacy Fallacy</h5><p>你看到别人的论述水平很低，或者别人的论述里面有谬误，就认为别人的观点一定是错误的。<br>很多时候，辩论的赢家获胜并不是因为观点正确，而是因为辩论技巧更好。作为一个理性的人，你不能因为别人的论述中存在谬误或者错误，就认为别人的观点一定是错误的。<br>例子：一个提倡健康饮食的人在电视上发表了很荒唐的饮食理论来推广健康饮食理念，小红看后觉得健康饮食就是骗人的，于是开始每天暴饮暴食。小红犯了谬误谬误。</p><hr><h5 id="第五条：滑坡谬误-Slippery-Slope"><a href="#第五条：滑坡谬误-Slippery-Slope" class="headerlink" title="第五条：滑坡谬误 Slippery Slope"></a>第五条：滑坡谬误 Slippery Slope</h5><p>你搞得好像如果A发生了，那么Z也一定会发生会，以此来表示A不应该发生。<br>你不讨论现下的事物(A)，而是把讨论重心转移到了意淫出来的极端事物(Z)。因为你没能给出任何证据来证明A的发生一定会造成极端事物Z的发生，所以这是一种诉诸恐惧的谬误，也影响了人们讨论A时候的客观性。<br>例子：小红反对同性恋婚姻，因为她认为如果我们允许同性恋结婚，那么就会有人想要和桌子、椅子结婚。小红犯了滑坡谬论。</p><hr><h5 id="第六条：人身攻击-Ad-Hominem"><a href="#第六条：人身攻击-Ad-Hominem" class="headerlink" title="第六条：人身攻击 Ad Hominem"></a>第六条：人身攻击 Ad Hominem</h5><p>你讨论时针对对方的人格、动机、态度、地位、阶级或处境等，而进行攻击或评论，并以此当作提出了理据去驳斥对方的论证或去支持自己的论点<br>人身攻击时不一定是直接进行攻击，也可能是通过背后捅刀子、暗示听众等等方式来造成对对方人格的质疑。你试图用你对别人人格的攻击来取代一个有力的论述。更多关于人身攻击。<br>例子：当小明提出了一个很合理的关于基础设施建设的提议的时候吗，小红说她不相信任何小明说的话，因为小明不爱国，经常批评政府，不懂得感恩。小红犯了人身攻击的谬误。</p><hr><h5 id="第七条：诉诸虚伪-Tu-Quoque"><a href="#第七条：诉诸虚伪-Tu-Quoque" class="headerlink" title="第七条：诉诸虚伪 Tu Quoque"></a>第七条：诉诸虚伪 Tu Quoque</h5><p>你不正面回应别人对你的批评，而是用批评别人作为你的回复——“你不也曾经…..”<br>你想要把通过用批评回应批评的方式，免去你为自己辩护的责任。你通过这种方法来暗示对方是个虚伪的人，但是不管别人虚伪与否，你都只是在回避别人对你的批评。<br>例子：小明在和小红争论的时候指出小红犯了一个逻辑谬误，小红不正面捍卫自己，反而回应：“你之前也犯了逻辑谬误。” 小红在这里犯了诉诸虚伪的谬误</p><hr><h5 id="第八条：个人怀疑-Personal-Incredulity"><a href="#第八条：个人怀疑-Personal-Incredulity" class="headerlink" title="第八条：个人怀疑 Personal Incredulity"></a>第八条：个人怀疑 Personal Incredulity</h5><p>你因为自己不明白或者知识水平不够，就得出一个事物可能是假的。<br>一些很复杂的概念，比如生物进化等等需要一些基本的理解和知识。有些人因为不理解这些复杂的概念，而觉得这些东西是错误的。<br>例子：小红指着块石头说：“你说进化论是真的，那你让这块石头进化人给我看看。”小红犯了个人怀疑的谬误。</p><hr><h5 id="第九条：片面辩护（迷信谬误）-Special-Pleading"><a href="#第九条：片面辩护（迷信谬误）-Special-Pleading" class="headerlink" title="第九条：片面辩护（迷信谬误） Special Pleading"></a>第九条：片面辩护（迷信谬误） Special Pleading</h5><p>当你的观点被证明是错误的时候，你用特例来给自己开脱。<br>人类都不喜欢被证明是错的，所以当他们被证明是错的时候总会想办法给自己开脱。人总是觉得自己以前觉得正确的东西必须是正确的吗，所以总能找到理由让自己阿Q一下。只有诚实和勇敢的人才能面对自己的错误，并且承认自己犯错了。<br>例子：小红说自己有特异功能，能用塔罗牌算出未出生小孩的性别，但是孩子生下来后发现猜错了，于是她就说是算命的人缺乏信仰。小红犯了片面谬误。</p><hr><h5 id="第十条：诱导性问题-Loaded-Question"><a href="#第十条：诱导性问题-Loaded-Question" class="headerlink" title="第十条：诱导性问题 Loaded Question"></a>第十条：诱导性问题 Loaded Question</h5><p>你在提出问题的时候加入了诱导的成分，使得对方只能按着你的意思来回答。<br>你试图用诱导性的问题来逼对方回答你提出的低级问题，从而破坏理性的讨论。<br>例子：小红怀疑自己的丈夫孙越搞外遇，为了一探究竟，于是就问他：“陈轩的屁股上是不是有个胎记？”小红使用的就是诱导性问题。</p><hr><h5 id="第十一条：举证责任-Burden-of-Proof"><a href="#第十一条：举证责任-Burden-of-Proof" class="headerlink" title="第十一条：举证责任 Burden of Proof"></a>第十一条：举证责任 Burden of Proof</h5><p>你认为举证责任不在提出观点的人，而在于质疑观点的人。<br>当有人提出一个观点结果被人质疑后，你认为举证的责任不在提出观点的人，而在质疑者。不能证伪一个事物，或者举出反例，并不能证明这个事物的合理性。当然，如果只因为没有足够的证据说明一个事物是合理的并不能肯定的说明它是不合理的。<br>例子：小红说他相信宇宙是一个叫KengDie的全知全能神创造的，因为没有人能证明KengDie不存在，所以KengDie是存在的。小红犯了举证责任的谬误。</p><hr><h5 id="第十二条：语义模糊-Ambiguity"><a href="#第十二条：语义模糊-Ambiguity" class="headerlink" title="第十二条：语义模糊 Ambiguity"></a>第十二条：语义模糊 Ambiguity</h5><p>你用双关语或者意思存有歧义的语言来歪曲事实。<br>你使用双关语或者意思存有歧义的语言，当你被别人批评的时候又利用这些有歧义的语言作为自己的挡箭牌。<br>例子：地上一个猴，树上qi个猴，一共几个猴？</p><hr><h5 id="第十三条：赌徒谬误-The-Gambler’s-Fallacy"><a href="#第十三条：赌徒谬误-The-Gambler’s-Fallacy" class="headerlink" title="第十三条：赌徒谬误 The Gambler’s Fallacy"></a>第十三条：赌徒谬误 The Gambler’s Fallacy</h5><p>你认为随机事物的发生和之前发生的事情是有相关性的。<br>有人在看到独立的随机事件（比如抛硬币）时，总觉得会和前面的事情有相关性（前面连着五个正面，下一个肯定要是反面了。）</p><hr><h5 id="第十四条：诉诸主流思想-Bandwagon"><a href="#第十四条：诉诸主流思想-Bandwagon" class="headerlink" title="第十四条：诉诸主流思想 Bandwagon"></a>第十四条：诉诸主流思想 Bandwagon</h5><p>你试图说明因为很多人都在做同一件事情/相信同一件事物，这件事情就是对的。<br>一个事物/观点的流行程度和它本身是否合理没有关系。地球是球形的，在人们相信地球是平的时代地球也是球形的，地球才不管你信不信它呢。<br>例子：看到《货币战争》怎么那么畅销，小红相信一定是罗斯柴尔德和共济会在背后操纵着整个世界。小红犯了谬误。</p><hr><h5 id="第十五条：诉诸权威-Appeal-to-Authority"><a href="#第十五条：诉诸权威-Appeal-to-Authority" class="headerlink" title="第十五条：诉诸权威 Appeal to Authority"></a>第十五条：诉诸权威 Appeal to Authority</h5><p>你利用一个权威人物/机构的观点来取代一个有力的论述。<br>要证明一个观点，只是摘录别人的观点是不够的， 至少要知道所提到的权威为什么有那样的观点。因为权威人物/机构也是会犯错误的，所以不能无条件的假设合理性。当然，权威人物/机构的观点有可能是对的，所以不能只因为对方使用了诉诸权威的谬误就认定这个观点肯定是错的。<br>例子：小红不知道怎么反驳进化论，于是就说：“我老公孙越是大科学家，他觉得进化论是错的。”小红犯了诉诸权威的额谬误。</p><hr><h5 id="第十六条：合成谬误-Composition-Division"><a href="#第十六条：合成谬误-Composition-Division" class="headerlink" title="第十六条：合成谬误 Composition/Division"></a>第十六条：合成谬误 Composition/Division</h5><p>你认为一个总体的组成部分所具有的特性，对于这个总体的其它部分也是普适的。<br>很多时候，对于一个组成部分存在合理性的事物，对于其它组成部分并不具有合理性。我们常能观察到事物之间的一致性，所以当一致性不存在的时候也会偏见的认为有一致性。<br>例子：小红买了辆自行车，当她看到自行车的车座是人造革的时候，她就觉得自行车的其它部位也是人造革的。</p><hr><h5 id="第十七条：没有真正的苏格兰人-No-true-Scotsman"><a href="#第十七条：没有真正的苏格兰人-No-true-Scotsman" class="headerlink" title="第十七条：没有真正的苏格兰人 No true Scotsman"></a>第十七条：没有真正的苏格兰人 No true Scotsman</h5><p>你提出了一个观点，并收到了别人的批评，你试图用“诉诸纯洁”的方式来捍卫自己的观点。<br>你试图通过马后炮和修改标准的方式来维护自己那有缺陷的观点。<br>例子： 小红：“所有荷兰人都喜欢喝胡辣汤”。小明：“孙越就是荷兰人，他就不喜欢喝胡辣汤。”小红：“好吧，所有【真正的】荷兰人都喜欢喝胡辣汤。”</p><hr><h5 id="第十八条：基因谬误-Genetic"><a href="#第十八条：基因谬误-Genetic" class="headerlink" title="第十八条：基因谬误 Genetic"></a>第十八条：基因谬误 Genetic</h5><p>你通过一个事物的出身来判断它的好坏。<br>你试图逃避正面的讨论，而转而讨论事物的出处。这种做法和本文第六条“人身攻击”类似，都是想试图通过已有的负面印象来从侧面攻击对方，却不能正面的回应对方的论述。<br>例子： 小明：“孙越不喜欢喝胡辣汤。”小红：“孙越是荷兰人，怎么会不喜欢喝胡辣汤？”</p><hr><h5 id="第十九条：非黑即白-Black-or-White"><a href="#第十九条：非黑即白-Black-or-White" class="headerlink" title="第十九条：非黑即白 Black-or-White"></a>第十九条：非黑即白 Black-or-White</h5><p>你把黑和白作为仅有的可能，却忽略了其它可能性的存在。<br>你使用了简单粗暴的假二分法，来掩盖其它可能性的存在。你想通过非黑即白的选择来误导讨论，破坏辩论的建设性。<br>例子：在谈到反恐战争时，总统说如果你不支持反恐战争，你就是支持恐怖分子。总统这里犯了非黑即白的谬误。</p><hr><h5 id="第二十条：窃取论点-Begging-the-Question"><a href="#第二十条：窃取论点-Begging-the-Question" class="headerlink" title="第二十条：窃取论点  Begging the Question"></a>第二十条：窃取论点  Begging the Question</h5><p>你采用循环论证的方法来证明一个被包含在前提里面的观点。<br>这是一种逻辑智商破产的谬误，因为你把你的前提假设默认为真的，然后利用循环论证的方式来证明它。<br>例子：KengDie教的经文《KengDie Sutra》里面说的东西都是真理，因为在《KengDie Sutra》第一章第二段里面提到了“KengDie所述都是真理。”</p><hr><h5 id="第二十一条：诉诸自然-Appeal-to-Nature"><a href="#第二十一条：诉诸自然-Appeal-to-Nature" class="headerlink" title="第二十一条：诉诸自然 Appeal to Nature"></a>第二十一条：诉诸自然 Appeal to Nature</h5><p>你认为一个事物是“自然”的，所以它是合理、必然并且更好的。<br>一个事物是自然的并不一定代表它就更好。互相杀戮是大自然中普遍存在的现象，但是大多数人都认为我们不应该互相屠杀。<br>例子：小红认为吃草药肯定比吃人工制造的药有效，因为草药更加“自然”。小红犯了诉诸自然的谬误</p><hr><h5 id="第二十二条：轶事证据-Anecdotal"><a href="#第二十二条：轶事证据-Anecdotal" class="headerlink" title="第二十二条：轶事证据 Anecdotal"></a>第二十二条：轶事证据 Anecdotal</h5><p>你试图用个人经验或者单独事例来取代逻辑论述或者有力的证据。<br>比起复杂而确凿的证据来说，轶事证据更容易获得，但是却要粗浅很多。在绝大多数情况下，量化衡量的科学数据/确凿证据比个人经验/轶事要更加可信。<br>例子：小红爷爷是个30年的老烟枪，现在80多岁身体还很健康，小红依次得出吸烟对身体无害的结论。小红犯了轶事证据的谬误。</p><hr><h5 id="第二十三条：德克萨斯神枪手-The-Texas-Sharpshooter"><a href="#第二十三条：德克萨斯神枪手-The-Texas-Sharpshooter" class="headerlink" title="第二十三条：德克萨斯神枪手 The Texas Sharpshooter"></a>第二十三条：德克萨斯神枪手 The Texas Sharpshooter</h5><p>你在大量的数据/证据中小心的挑选出对自己的观点有利的证据，而不使用那些对自己不利的数据/证据。<br>你先开了一枪，然后在子弹击中的地方画上靶心，搞得自己真是个神枪手一样。你先决定了自己的立场，然后才开始找证据，并且你只找对自己有利的，而对于那些对自己不利的就选择性忽略。<br>例子：红X字会为了证明自己尽到了职责，到处宣传自己拨出了XXXX的善款，却只字不提自己公款消费的奢侈无度。红X字会犯了“德克萨斯神枪手”谬误</p><hr><h5 id="第二十四条：中间立场-Middle-Ground"><a href="#第二十四条：中间立场-Middle-Ground" class="headerlink" title="第二十四条：中间立场 Middle Ground"></a>第二十四条：中间立场 Middle Ground</h5><p>你觉得两个极端观点的妥协，或者说中间立场，肯定是对的。</p><p>虽然大多数时候，真理确实存在于两种极端的中间地带，但是你不能轻易的认为只要是处于中间立场的观点就一定是正确的。谎言和实话的中间地带依然是谎言。<br>例子：小红认为疫苗会造成儿童自闭症，孙越从科学研究的结论中得出结论认为疫苗不会造成儿童自闭症，小明认为两者观点的妥协——疫苗会造成儿童自闭症，但不是全部的儿童自闭症——才是正确的。小明犯了中间立场的谬误。</p>]]></content>
      
      
      <categories>
          
          <category> 科普 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何让孩子爱上♂学习</title>
      <link href="/2019/01/03/yjango/"/>
      <url>/2019/01/03/yjango/</url>
      
        <content type="html"><![CDATA[<h1 id="如何让孩子爱上♂学习"><a href="#如何让孩子爱上♂学习" class="headerlink" title="如何让孩子爱上♂学习"></a>如何让孩子爱上♂学习</h1><h1 id="正经科普哒！"><a href="#正经科普哒！" class="headerlink" title="正经科普哒！"></a>正经科普哒！</h1><p>转载自bilibili</p><p><iframe src="//player.bilibili.com/player.html?aid=39525280&cid=69891541&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" height="800" width="100%"><br></iframe><br>    【附上简介】<br>    这个是和谐版，原版可以去知乎或公号查看。这里有我上了「知乎 2018『互联网洞见者』」十问的一个最佳回答，提到了未来人工智能的问题，看完就明白你为什么一定要好好学习，踢毽根本不算什么。<a href="https://www.zhihu.com/question/299868516/answer/517742601" target="_blank" rel="noopener">https://www.zhihu.com/question/299868516/answer/517742601</a></p>]]></content>
      
      
      <categories>
          
          <category> 科普 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -学习观 -生理模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【简易教程】新一代线稿自动上色软件Style2Paint的搭建方法</title>
      <link href="/2018/12/22/glai/"/>
      <url>/2018/12/22/glai/</url>
      
        <content type="html"><![CDATA[<h1 id="【简易教程】新一代线稿自动上色软件Style2Paint的搭建方法"><a href="#【简易教程】新一代线稿自动上色软件Style2Paint的搭建方法" class="headerlink" title="【简易教程】新一代线稿自动上色软件Style2Paint的搭建方法"></a>【简易教程】新一代线稿自动上色软件Style2Paint的搭建方法</h1><p>还是贴吧看到的转过来了<br>非常实用的上色服务，有网页版没有的模仿上色功能。<br><img src="/2018/12/22/glai/i1.jpg" alt="2"></p><h2 id=""><a href="#" class="headerlink" title=""></a><img src="/2018/12/22/glai/i2.jpg" alt="3"></h2><ol><li>先说下硬件要求:<br>例子1: i3-2350m+8g内存, 无显卡. 正常运行, 就是上色要上2分钟;<br>例子2: i5-4590+12g内存, 无显卡, 正常运行, 上色30s内;<br>例子3: 阿里云乞丐版服务器, 单核1Ghz+1g内存, 无显卡, 直接翻车;<br>(原项目本来是需要N卡支持的, 不过这里我把代码改成cpu版的, 降了下硬件门槛)<br>(系统为windows 64位, 没试过32位的, 不过可能会翻车, 因为内存太小)</li></ol><ol start="2"><li>需要下载的东西:<br>(1)Anaconda : <a href="https://www.anaconda.com/download/#download" target="_blank" rel="noopener">https://www.anaconda.com/download/#download</a><br>到”Python 3.6 version”下直接点Download就行, 下载完后直接下一步到安装完就行了;<br>(2) 源码: 度盘-&gt;1i5zOG0t 密码:dqg9<br>下载完把压缩包放到D盘根目录, 然后”解压到当前文件夹”;</li></ol><ol start="3"><li>搭建:<br>(1) 开始菜单–&gt;Anaconda3(64-bit)–&gt;Anaconda Prompt<br>出现黑窗口然后, 输入以下命令, 输入一行, 回车, 安装完后继续输入下一行, 回车:<br>pip install tensorflow<br>pip install keras<br>pip install chainer<br>pip install bottle<br>pip install h5py<br>pip install opencv-python</li></ol><p>(2) 全部安装完后, 继续留在黑窗口:<br>依次输入执行以下命令:<br>d:<br>cd style2paints-master/server<br>python server.py<br>然后需要等待一段时间来启动服务, 我那个i3-2350m的机子等了1分钟;<br>等最后出现”Hit Ctrl-C to quit.”这句就说明启动成功了! 到这里就搭建成功了!<br>(黑窗口不能关掉)</p><ol start="4"><li>把玩:<br>打开浏览器, 访问: <a href="http://127.0.0.1:8000/" target="_blank" rel="noopener">http://127.0.0.1:8000/</a><br>点”upload sketch”上传线稿, “upload reference”上传配色参考图, 然后点”colorize”, 然后耐心等待结果就行;<br>等出现了上色结果后, 你会发现有些地方上错色了, 这是就点击”pen”, 在配色参考图中点选修正颜色, 然后在线稿<br>中需要修正的地方随便涂几笔或点几笔都行, 然后再colorize, 以此类推;<br>(线稿和参考图在 style2paints-master/images/images_for_reseachers)<br>——-修正颜色示例:<br><img src="/2018/12/22/glai/i4.jpg" alt="4"><br><img src="/2018/12/22/glai/i5.jpg" alt="5"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -AI自动上色 -卷积神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【原理】点开就变的图片原理分析</title>
      <link href="/2018/12/22/ylimage/"/>
      <url>/2018/12/22/ylimage/</url>
      
        <content type="html"><![CDATA[<h1 id="【原理】点开就变的图片原理分析"><a href="#【原理】点开就变的图片原理分析" class="headerlink" title="【原理】点开就变的图片原理分析"></a>【原理】点开就变的图片原理分析</h1><p><img src="/2018/12/22/ylimage/y1.gif" alt="来一份色图"><br><a id="more"></a></p><h1 id="点开就变的图片简单的制作方法的原理"><a href="#点开就变的图片简单的制作方法的原理" class="headerlink" title="点开就变的图片简单的制作方法的原理"></a>点开就变的图片简单的制作方法的原理</h1><p>带Alpha通道的图像格式就能制作，下面只讨论灰度图像，因为对于彩色图像基本无解。屏幕显示一张有透明度的图像，必定要有背景才能显示出来，关键就在于这个背景是什么。背景大多情况下是纯黑或纯白。这类图片就是利用在不同背景下，显示的图像不同制作而成的。对于灰度图像的每个像素，屏幕显示使用下面这个公式：<br><img src="/2018/12/22/ylimage/y2.jpg" alt="test"><br><img src="/2018/12/22/ylimage/y3.jpg" alt="test"><br>最后放出一张根据此原理做成的图，黑色背景下是正常的，白色背景下是透视&gt;///&lt;。如果想要反过来，需要穿白衣服或者调整两张原图像亮度。<br><img src="/2018/12/22/ylimage/y4.png" alt="test"><br>作者：九条可怜<br>链接：<a href="https://www.zhihu.com/question/43520923/answer/120483162" target="_blank" rel="noopener">https://www.zhihu.com/question/43520923/answer/120483162</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -图片点击变化 -幻影坦克 -原理分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【教程】点开就变的图片简单的制作方法(5)</title>
      <link href="/2018/12/22/psimage4/"/>
      <url>/2018/12/22/psimage4/</url>
      
        <content type="html"><![CDATA[<h1 id="【教程】点开就变的图片简单的制作方法-5"><a href="#【教程】点开就变的图片简单的制作方法-5" class="headerlink" title="【教程】点开就变的图片简单的制作方法(5)"></a>【教程】点开就变的图片简单的制作方法(5)</h1><p>又双叒叕一个点击图片变化的方法<br>这次的方法有点复杂是放大和缩小影响变化<br>在QQ中可能会遇到一些比较“神奇”的图片，它们看似普通，但是当你点开看大图时，就会摇身一变，成了完全不一样的图。这种图一般都为灰色背景，图中图案为黑白。</p><p>原理：以QQ为例，在点开图之前，QQ默认的图片背景色是白色，点开后默认背景色是黑色。我们需要做的是将一个图分成两部分，一部分仅在黑色背景上显示，白色背景上完全看不到（真图）；另一部分仅在白色背景上显示，黑色背景上完全看不到（伪图）。但是如何让一个图只能在黑色的背景显示但是在白色背景完全不显示，而且不能是只有黑色和白色呢？那就是将“灰度（这个颜色有多灰）”转换成不透明度，比如可以将灰色转化成50%的黑，在白色背景上看起来效果是一样的，但是在黑色背景上，纯灰依然是纯灰，但是50%的黑+100%黑=100%黑，就显示不出来了。白色同理。<br>工具：</p><p>1.Photoshop（演示中我会使用Photoshop CC 2015版本，Mac OS 所以可能看起来跟windows有些差距）</p><p>2.伪图（点开之前的图）</p><p>3.真图（点开之后的图）</p><p>准备好后，Here we go!<br>第一步，制作 “灰色背景”</p><p>新建一个2x2像素的画板，并放大到3200%。<br><img src="/2018/12/22/psimage4/w2.jpg" alt="test"><br>创建2x2的画布<br><img src="/2018/12/22/psimage4/w3.jpg" alt="test"><br>注意右下角放大倍数3200%</p><p>使用一个像素粗细的铅笔将左下，右上，右下的像素涂黑。<br><img src="/2018/12/22/psimage4/w4.jpg" alt="test"></p><p>然后选择（编辑-自定义图案-确定）这样这个画布就被当作图案储存了。第一步结束。第二步，填充背景再新建一个画布，推荐（1000*800左右）太大了在Photoshop中显示会有问题。新建图层-图层样式-图案叠加-（选中刚刚储存的图案）-缩放100%-叠加模式正常-100%不透明度-确定</p><p><img src="/2018/12/22/psimage4/w5.jpg" alt="test"></p><p>背景填充配置</p><p>然后右键栅格化图层样式</p><p>选择-色彩范围</p><p>选择-取样颜色-颜色容差200，用吸管取左边色板中的黑色，确定<br><img src="/2018/12/22/psimage4/w6.jpg" alt="test"><br>选中图层1，重复上述步骤，在选颜色时用吸管取色板中白色部分。确定，Ctrl+J,得到图层2(again) ，重命名为“白色部分”</p><p>隐藏图层1.</p><p>第二步结束，效果如图<br><img src="/2018/12/22/psimage4/w7.jpg" alt="test"></p><p>第三步，设置伪图</p><p>置入伪图，我就选了一张Conan 和 Haibara Ai的壁纸。</p><p>图像-调整-黑白-（不用改设置）-确定</p><p>图像-调整-反相</p><p>隐藏其它所有图层<br><img src="/2018/12/22/psimage4/w8.jpg" alt="test"></p><p>编辑-定义画笔预设-（命名为“伪图”）-确定。</p><p>新建图层-（填充为黑色）-添加模版-选中模版-选中画笔工具-右键-找到刚刚设置的“伪图”图案-在画布中间点一下<br><img src="/2018/12/22/psimage4/w9.jpg" alt="test"><br>在右侧图层上右键，转换为智能对象，重命名“伪图”</p><p>第三步结束第四步，设置真图</p><p>原理同上，照片以链接形式放出。</p><p>置入真图，我就选了一张Code Lyoko的壁纸。</p><p><img src="/2018/12/22/psimage4/w10.jpg" alt="test"></p><p>图像-调整-黑白-（不用改设置）-确定隐藏其它所有图层编辑-定义画笔预设-（命名为“真图”）-确定。新建图层-（填充为白色）-添加模版-选中模版-选中画笔工具-右键-找到刚刚设置的“真图”图案-在画布中间点一下转换为智能对象，重命名“真图”第四步结束第五步，分配背景。这里需要解释一下。因为在第二步填充背景时，我们将背景以3:1的方式分成了白色部分和黑色部分，即在一个2x2的方格内有1个白色部分和3个黑色部分。可以尝试将白色部分分给“真图”，如果效果不好再试试另一种方法。（我这次选的图适合将白色部分分给伪图）在“白色部分”图层缩略图按住ctrl——左键，再选中“伪图”图层，Ctrl+J.得到图层2，重命名为“伪图2”在“黑色部分”图层缩略图按住ctrl——左键，再选中“真图”图层，Ctrl+J.得到图层2，重命名为“真图2”将除了“伪图2”和“真图2”的其它图层隐藏，包括背景图层。第五步结束，效果图如下。</p><p><img src="/2018/12/22/psimage4/w11.jpg" alt="test"><br>第六步，导出。</p><p>这就不说了，关键是一定要导出到png图片。</p><p>完成！</p><p>作者：PlayerMin<br>链接：<a href="https://www.zhihu.com/question/43473759/answer/118721356" target="_blank" rel="noopener">https://www.zhihu.com/question/43473759/answer/118721356</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -图片点击变化 -幻影坦克 -开车方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【教程】点开就变的图片简单的制作方法(4)</title>
      <link href="/2018/12/22/psimage3/"/>
      <url>/2018/12/22/psimage3/</url>
      
        <content type="html"><![CDATA[<h1 id="【教程】点开就变的图片简单的制作方法-4"><a href="#【教程】点开就变的图片简单的制作方法-4" class="headerlink" title="【教程】点开就变的图片简单的制作方法(4)"></a>【教程】点开就变的图片简单的制作方法(4)</h1><p>又一个点击图片变化的方法<br>1.首先，打开PS<br>找到你所中意的图<br><img src="/2018/12/22/psimage3/q2.jpg" alt="test"><br>2.将图片黑白化：<br>如图所示，找到“色相/饱和度”<br><img src="/2018/12/22/psimage3/q3.jpg" alt="test"><br>3.<br>在“饱和度”一栏拉到底<br>黑白化完成<br><img src="/2018/12/22/psimage3/q4.jpg" alt="test"><br>4.<br>找到到右下角的“通道”<br>之后点击图中红圈所示的“将通道作为选区载入”<br><img src="/2018/12/22/psimage3/q5.jpg" alt="test"><br>5.<br>点击完“将通道作为选区载入”后，PS就自动选择了图片中浅色的部分<br>但是我们要去除图中深色的部分<br>所以点击“反选”<br><img src="/2018/12/22/psimage3/q6.jpg" alt="test"><br>6.<br>“反选”后，再按下“Delete”键<br>就把深色的地方消除啦~<br>（虽然看上去有点奇怪）<br><img src="/2018/12/22/psimage3/q7.jpg" alt="test"><br>7.<br>然而，其实这样子并没有完全消除灰色的部分<br>所以，最后找到“色阶”<br><img src="/2018/12/22/psimage3/q8.jpg" alt="test"><br>将“输出色阶”一开始在左边的黑色小三角拉到右边<br><img src="/2018/12/22/psimage3/q9.jpg" alt="test"><br>这样就大功告成啦，别忘了用.PNG格式保存哦</p><p>进阶：<br>如何抠出方形区域<br>1.按照之前的步骤制作好图片<br>将制作好的图片拷贝一份，再在最底层加上黑色的背景<br><img src="/2018/12/22/psimage3/q10.jpg" alt="test"><br>2.将拷贝图和黑色背景合并在一起，此时显示的是原图在贴吧上打开的效果<br><img src="/2018/12/22/psimage3/q11.jpg" alt="test"><br>3.选择你想要保留的区域<br><img src="/2018/12/22/psimage3/q12.jpg" alt="test"><br>4.在新图层将你所选择的区域粘贴<br><img src="/2018/12/22/psimage3/q13.jpg" alt="test"><br>……接下来大家都懂啦</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -图片点击变化 -幻影坦克 -开车方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【教程】点开就变的图片简单的制作方法(3)</title>
      <link href="/2018/12/21/psimage2/"/>
      <url>/2018/12/21/psimage2/</url>
      
        <content type="html"><![CDATA[<h1 id="【教程】点开就变的图片简单的制作方法-3"><a href="#【教程】点开就变的图片简单的制作方法-3" class="headerlink" title="【教程】点开就变的图片简单的制作方法(3)"></a>【教程】点开就变的图片简单的制作方法(3)</h1><p>还有一个点击图片变化的方法<br>【将图层混合发挥到极致】</p><p>#制作不同底色下显示不同内容的图片<br>此方法：</p><p>适合任何图片<br>繁琐</p><p>繁琐</p><p>繁琐（重要的话说三次）<br>—————————<br>预览图:<br><img src="/2018/12/21/psimage2/k2.png" alt="test"><br>——————————</p><p>看不懂的直接跳到下一个分割线吧</p><p>先看这个：<a href="http://tieba.baidu.com/p/3580736085?fr=frs" target="_blank" rel="noopener">http://tieba.baidu.com/p/3580736085?fr=frs</a></p><p>要求：两张图片<br>每个上下图层对应的通道内 且 每个上下图层对应像素内，亮图B的明度值都要大于暗图A</p><p>原理（每个通道、每个像素）：<br>要制作的图片为X ，X的蒙版(不透明度)为P，暗图为A，亮图为B<br>白底：X<em>P + 1</em>(1-P) = B<br>黑底：X<em>P + 0</em>(1-P) = A<br>简化：<br>X<em>P + 1-P = B ①<br>X</em>P = A ②<br>②-①得：<br>A-B = P-1，即：A-B+1 = P<br>得到了P，代入②<br>X = A/P<br>—————————<br>实战：<br>先准备两张图片<br>可随意选择，效果差<br>最好一张亮(B)，一张暗(A)，效果好<br>这里随意找了两张自带图片的弹幕：<br><img src="/2018/12/21/psimage2/k3.jpg" alt="test"><br><img src="/2018/12/21/psimage2/k4.jpg" alt="test"><br>导入Ps，并调整大小（此处略）<br>为了方便，先去色（此处略）<br>接下来把图片彻底的变亮变暗<br><img src="/2018/12/21/psimage2/k5.jpg" alt="test"><br><img src="/2018/12/21/psimage2/k6.jpg" alt="test"><br>合并图层<br><img src="/2018/12/21/psimage2/k7.jpg" alt="test"><br>【如果自认为素材足够好的话，请跳过以上步骤】<br>复制B，将B反相<br><img src="/2018/12/21/psimage2/k8.jpg" alt="test"><br>调整图层顺序、混合模式并盖印<br><img src="/2018/12/21/psimage2/k9.jpg" alt="test"><br><img src="/2018/12/21/psimage2/k10.jpg" alt="test"><br>盖印完记得将混合模式调整为正常，下同<br>至此，透明通道做完了</p><p>调整图层顺序、混合模式并盖印<br><img src="/2018/12/21/psimage2/k11.jpg" alt="test"><br><img src="/2018/12/21/psimage2/k12.jpg" alt="test"><br>选择图层P，切换到通道选项卡，在RGB通道缩略图上Ctrl+左键，回到图层选项卡，点击图层X，为X添加蒙版（图略）</p><p>添加底色看看<br><img src="/2018/12/21/psimage2/k13.jpg" alt="test"><br><img src="/2018/12/21/psimage2/k14.jpg" alt="test"><br>上色<br><img src="/2018/12/21/psimage2/k15.jpg" alt="test"><br>（将蒙版移到别的图层，免得合并图层时被并没了）<br><img src="/2018/12/21/psimage2/k16.jpg" alt="test"><br><img src="/2018/12/21/psimage2/k17.jpg" alt="test"><br><img src="/2018/12/21/psimage2/k18.jpg" alt="test"><br><img src="/2018/12/21/psimage2/k19.jpg" alt="test"><br>把其他的图层眼睛戳瞎<br><img src="/2018/12/21/psimage2/k20.jpg" alt="test"><br>保存为.png<br><img src="/2018/12/21/psimage2/k21.jpg" alt="test"><br>完成！<br>——————————</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -图片点击变化 -幻影坦克 -开车方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【教程】点开就变的图片简单的制作方法(2)手机PS</title>
      <link href="/2018/12/21/test360/"/>
      <url>/2018/12/21/test360/</url>
      
        <content type="html"><![CDATA[<h1 id="【教程】点开就变的图片简单的制作方法-2-手机PS"><a href="#【教程】点开就变的图片简单的制作方法-2-手机PS" class="headerlink" title="【教程】点开就变的图片简单的制作方法(2)手机PS"></a>【教程】点开就变的图片简单的制作方法(2)手机PS</h1><p>另一个图片点击变化的方法，用手机PS制作的教程。╭(′▽`)╯<br>(1)先按照图中位置摆放。直接看得到的在上边，然后黑白去色<br><img src="/2018/12/21/test360/i1.jpg" alt="1"><br>(2)然后风格化，阀值。前景色为黑色，透明度50%左右，背景色为白色，透明度0%。阀值50%左右调到自己认为合适，另一个100%<br><img src="/2018/12/21/test360/i2.jpg" alt="2"><br><img src="/2018/12/21/test360/i3.jpg" alt="2"><br>(3)然后调整图层顺序如图中所示，隐藏白色图层，发现全黑就可以了<br><img src="/2018/12/21/test360/i4.jpg" alt="3"><br>(4)把图层调到下面第一张图的位置，然后-阀值，前景色为黑色，透明度0%，背景色为白色，透明度为25%左右，阀值，平滑度如图中所示<br><img src="/2018/12/21/test360/i5.jpg" alt="4"><br><img src="/2018/12/21/test360/i6.jpg" alt="4"><br><img src="/2018/12/21/test360/i7.jpg" alt="4"><br>阀值为大概数值，需要自己调到合适<br>(5)再按照下面第一张图中调整图层顺序，然后显示第一个图层，如第二张图中所示<br><img src="/2018/12/21/test360/i8.jpg" alt="5"><br><img src="/2018/12/21/test360/i9.jpg" alt="5"><br>(6)大家会发现会有第一张图层的残影，这时候就去-调整-曲线，按照下图调整下第一张图层，调到看不见为止<br><img src="/2018/12/21/test360/i10.jpg" alt="6"><br> 然后就可以隐藏纯黑和纯白图层，保存为png格式就可以了。<br> 有些图片并没有那么容易调整，就需要大家慢慢调试曲线和阀值。<br> 最后上完成图<br><img src="/2018/12/21/test360/i11.png" alt="6"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -图片点击变化 -幻影坦克 -开车方法 -手机PS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【教程】点开就变的图片简单的制作方法(1)</title>
      <link href="/2018/12/21/psimage/"/>
      <url>/2018/12/21/psimage/</url>
      
        <content type="html"><![CDATA[<h1 id="【教程】点开就变的图片简单的制作方法-1"><a href="#【教程】点开就变的图片简单的制作方法-1" class="headerlink" title="【教程】点开就变的图片简单的制作方法(1)"></a>【教程】点开就变的图片简单的制作方法(1)</h1><p>以前收藏的教程感觉很有意思搬过来了<br>点击此图片测试 (☄⊙ω⊙)☄适用于贴吧等和黑色背景的图片查看器</p><p>#注意背景为黑色情况下才能显示里图片<br><img src="/2018/12/21/psimage/test.png" alt="1"></p><p>##例如贴吧或者某些手机自带的图库是黑色背景</p><h2 id=""><a href="#" class="headerlink" title=""></a><img src="/2018/12/21/psimage/j1.jpg" alt="1"></h2><h2 id="-1"><a href="#-1" class="headerlink" title=""></a><img src="/2018/12/21/psimage/j2.jpg" alt="2"></h2><h2 id="-2"><a href="#-2" class="headerlink" title=""></a><img src="/2018/12/21/psimage/j3.jpg" alt="3"></h2><h2 id="-3"><a href="#-3" class="headerlink" title=""></a><img src="/2018/12/21/psimage/j4.jpg" alt="4"></h2><h2 id="-4"><a href="#-4" class="headerlink" title=""></a><img src="/2018/12/21/psimage/j5.jpg" alt="5"></h2><h2 id="-5"><a href="#-5" class="headerlink" title=""></a><img src="/2018/12/21/psimage/j6.jpg" alt="6"></h2><h2 id="-6"><a href="#-6" class="headerlink" title=""></a><img src="/2018/12/21/psimage/j7.jpg" alt="7"></h2><h2 id="-7"><a href="#-7" class="headerlink" title=""></a><img src="/2018/12/21/psimage/j8.jpg" alt="素材"></h2><h2 id="-8"><a href="#-8" class="headerlink" title=""></a><img src="/2018/12/21/psimage/j9.jpg" alt="素材"></h2><p>#另一种方法<br><img src="/2018/12/21/psimage/j10.jpg" alt="1"><br><img src="/2018/12/21/psimage/j11.jpg" alt="2"><br><img src="/2018/12/21/psimage/j12.jpg" alt="3"><br><img src="/2018/12/21/psimage/j13.jpg" alt="4"><br><img src="/2018/12/21/psimage/j14.jpg" alt="5"><br><img src="/2018/12/21/psimage/j15.jpg" alt="6"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -图片点击变化 -幻影坦克 -开车方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【原理】Live2D Cubism Moc 文件格式分析</title>
      <link href="/2018/12/12/live2dcubismmoc/"/>
      <url>/2018/12/12/live2dcubismmoc/</url>
      
        <content type="html"><![CDATA[<h1 id="原理-Live2D-Cubism-Moc-文件格式分析"><a href="#原理-Live2D-Cubism-Moc-文件格式分析" class="headerlink" title="[原理] Live2D Cubism Moc 文件格式分析"></a>[原理] Live2D Cubism Moc 文件格式分析</h1><p><img src="/2018/12/12/live2dcubismmoc/l2d.jpg" alt=" "><br>  偶尔在百度帖吧看到一篇技术向文章就转来了<br>转载自百度贴吧<a href="https://tieba.baidu.com/p/2896971262" target="_blank" rel="noopener">https://tieba.baidu.com/p/2896971262</a></p><p>Live2D Cubism Moc(*.moc)文件是用于为CubismSDK提供绘制数据的文件格式。<br>这个文件包含了图层、参数、坐标系和组件，这四部分信息。<br>一个Moc文件和一个图像文件（用于存储纹理），在理论上就能够提供重现角色所需的全部信息（这里不包括动作动画）。<br>该文档介绍了Moc文件的数据组织形式和解析方法。要理解该文档，您可能需要具备一定的编程基础。</p><p>1 概述<br><img src="/2018/12/12/live2dcubismmoc/bae.jpg" alt="1"><br>图1 解析Moc文件所涉及的类的关系图</p><p>在我们的例子中，将使用一些面向对象的概念来解释Moc文件的结构。<br>这些类和Cubism SDK所涉及的类有一定的关联，但并不是等价的。</p><p>Cubism SDK提供的封装好的类库来解析Moc文件，因此您可能无法通过引用了SDK的代码来了解Moc文件内部的组织情况。<br>本文档附带了一个代码例子重现了Moc文件的解析步骤。<br>这个例子仅仅用于展示Moc文件的数据内容，因此去除了原有SDK涉及的大多数设计模式，这么做的好处是减少代码量，降低阅读者的门槛。<br>现在，您只需要安装一个免费的Visual Studio 2013 for Windows Desktop软件就可以运行和调试程序代码。</p><p>下图给出了本文档的类和SDK的类的部分关系，但仍然需要强调的是，不要用试图完全依靠本文档的概念来取代官方的SDK文档。</p><p><img src="/2018/12/12/live2dcubismmoc/aae.jpg" alt="1"><br>图2 本文档和CubismSDK在命名上的差异</p><p>2 知识准备</p><p>要分析Moc文件，您需要了解有关对象序列化的知识。<br>程序运行的状态以数据的形式存储在内存中，内存是随机访问的，因此数据的地址分布可能杂乱无章。<br>当我们需要永久保存这些数据，就需要将这些数据组织成字节序列，存入硬盘的文件。<br>而当我们需要恢复程序的运行状态，就需要把硬盘文件中的字节序列解码成内存中的数据结构，以便程序进行访问。<br>这种数据的转换过程被称为序列化和反序列化，它通常用于文件存储和网络数据传输。</p><p>常见的序列化技术包括Xml序列化和Json序列化。<br>它们是开放标准，因此能够很容易地找到平台集成的或是开放源代码的类库，来简化序列化技术的应用。<br>然而Moc文件采用的是一种相对封闭的序列化方式，因此我们需要手工实现其各个对象的反序列化代码。</p><p>3 简单数据类型的解析</p><p>序列化技术的精髓在于将内存数据和字节序列之间进行可逆的转换。那，为什么要转换为字节序列？</p><p>事实上，由于一个字节能表示的数据范围有限，因此常常使用多个字节来描述整数、小数等概念。<br>而使用多个字节来表示数据，就引入了一个问题，就是这些字节应该以什么顺序来存储。这就好像我们只有十个阿拉伯数字，<br>但是需要描述“万”或者“亿”的数量概念。<br>对于人类，我们从高位到低位依次书写各个数位上的阿拉伯数字符号，在计算机领域，这种方式被称为大端序。<br>而另一种书写顺序是从低位到高位依次书写，这种方式被称为小端序。小端序是我们身边所广泛受到使用的x86/x64/ARM架构处理器的一个特色。<br>将内存数据转换为字节序列，能够避免因为字节序所带来的兼容性问题。</p><p>Moc文件采用大端序作为序列化标准，x86/x64/ARM架构处理器采用小端序来解读大余1字节的数据内容。因此您的程序应该考虑字节序的转化。</p><p>Moc文件只包含4种简单数据类型：字节（char）、整数（int）、浮点数（float）、数组长度（变长整数）。<br>其中只有整数和浮点数涉及字节序的转化，因为它们的长度是4字节。<br>数组长度是一种长度可变的整数，其读取方式是设定一个初值为0的计数器，然后不断读取单个字节，对于每个读取到的字节，把计数器左移7位，<br>然后把读取字节的低7位加到计数器中，如果这个字节的最高位非零，那么停止读取并返回计数器的值。</p><p>关于其代码实现，您可以参考例子程序中的以下方法：</p><p>l SerializationHelper::DeserializeInt32(FILE<em>)<br>l SerializationHelper::DeserializeSingle(FILE</em>)<br>l SerializationHelper::DeserializeArrayLength(FILE*)</p><p>4 对象的解析</p><p>在Moc文件中，数据不是简单类型就是对象类型。对于简单类型的数据，直接使用第3节介绍的方法来读取就可以。<br>而要读取对象类型，需要先读取一个字节的类型编号，然后再调用与这个类型号所对应的反序列化方法。<br>其中，0x81类型号表示的是一个抽象的对象类型，您需要继续读取类型号来确定对象的种类。</p><p>另外，对于对象类型，序列化解析器需要收集其全部引用，并按照构造完成的时间顺序存入一个列表。<br>列表的作用是可以帮助解析器重用以前创建的对象。当在Moc文件中遇到0x21类型号时，<br>接下来所读取的一个整数将表示以构造对象列表中的某个特定元素的索引。<br>我们称这种对象为历史对象。</p><p>关于其代码实现，您可以参考例子程序中的以下方法：</p><p>l Document::DeserializeQuery(FILE*)</p><p>5 数组类型的解析</p><p>数组类型是对象类型的一种。Moc文件只涉及4种数组：字符数组、整数数组、浮点数数组、对象数组。</p><p>数组类型只包含3部分，各部分按顺序排列为：类型号（1字节），数组长度（变长），数据内容（根据内容类型和数组长度来确定）。</p><p>字符数组的类型号包括0x06（图层Id）、0x32（组件Id）、0x33（坐标系Id）、0x3c（参数Id）。<br>整数数组的类型号是0x19，浮点数组的类型号是0x1b，对象数组的类型号是0x0f。<br>关于其代码实现，您可以参考例子程序中的以下方法：</p><p>l SerializationHelper::DeserializeInt32Array(FILE<em>)<br>l SerializationHelper::DeserializeSingleArray(FILE</em>)<br>l SerializationHelper::DeserializeObjectArray(FILE<em>,Document</em>)</p><p>6 Cubism对象的解析</p><p>Cubism对象完全是由简单数据类型和对象数据类型所构成。因此前四节所介绍的方法的调用组合能够被用于解析Cubism对象。</p><p>参数（Parameter），类型号0x03，包括4部分，按顺序排列为：最小值（简单/float），<br>最大值（简单/float），默认值（简单/float），名字（数组/字符数组）。</p><p>参数采样（ParameterSample），类型号0x43，包括3部分，<br>按顺序排列为：参数名称（数组/字符数组，或对象/历史对象），采样点的数量（简单/int），采样点的取值（数组/浮点数数组）。</p><p>参数采样集（ParameterSamples），类型号0x42，包括1部分：参数采样的数组（数组/对象数组）。</p><p>旋转变换参数（RotationDeformer::Desc），类型号0x45，包括5部分，按顺序排列为：中心X坐标（简单/float），<br>中心Y坐标（简单/float），缩放X倍（简单/float），缩放Y倍（简单/float），旋转角度（简单/float）。</p><p>旋转变换（RotationDeformer），类型号0x44，包括4部分，按顺序排列为：坐标系名称（数组/字符数组），<br>父坐标系名称（数组/字符数组，或对象/历史对象），参数采样集（对象/ ParameterSamples），<br>采样数据（数组/ RotationDeformer::Desc数组）。</p><p>扭曲变换（CurvedSurfaceDeformer），类型号0x41，包括6部分，按顺序排列为：坐标系名称（数组/字符数组），<br>父坐标系名称（数组/字符数组，或对象/历史对象），X方向分段数（简单/int），Y方向分段数（简单/int），<br>参数采样集（对象/ ParameterSamples），采样数据（数组/ 浮点数数组的数组）。</p><p>组件（Component），类型号0x46，包括13部分，按顺序排列为：坐标系名称（数组/字符数组），<br>父坐标系名称（数组/字符数组，或对象/历史对象），参数采样集（对象/ ParameterSamples），覆盖顺序（简单/int），<br>覆盖顺序采样数据（数组/整数数组），透明度采样数据（数组/浮点数数组），纹理编号（简单/int），顶点数量（简单/int），<br>三角形数量（简单/int），位置索引数组（数组/整数数组），位置采样数据（数组/浮点数数组的数组），<br>纹理坐标数组（数组/浮点数数组），颜色混合类型（简单/int）。</p><p>图层（Part），类型号0x05，包括3部分，按顺序排列为：图层状态（简单/byte），<br>图层名称（数组/字符数组），坐标系数组（数组/对象数组），组件数组（数组/ Component数组）。</p><p>文档（Document）包括6部分，按顺序排列为：前缀（8字节），参数数组（数组/ Parameter数组），<br>图层数组（数组/ Part数组），画面宽度（简单/int），画面高度（简单/int），后缀（4字节）。</p><p>7 值得注意的数据</p><p>在组件对象中，我们很高兴地找到了图形绘制流水线所需要的关键数据：纹理编号、顶点位置坐标、顶点纹理坐标和索引编号。<br>这意味着我们有机会脱离SDK，直接调用图形编程接口来绘制Cubism模型。</p><p>参数控制是通过插值来实现的，因此包含参数采样集（ParameterSamples）的类是我们需要关注的。<br>总共有3个，它们分别是：旋转变换（RotationDeformer），扭曲变换（CurvedSurfaceDeformer），组件（Component）。<br>这三种类型可以接受参数控制，并用于调整组件顶点的位置。</p><p>旋转变换的采样数据包括各个采样点下的旋转和缩放值。当实际参数取值为两个采样值中间的某个值时，<br>通过线性插值的方法来确定该情况下的旋转和缩放值。</p><p>扭曲变换的采样数据包括一个二重浮点数数组。外层数组用于描述各个采样点下的网格，<br>内层数组用于描述特定网格的各个顶点位置。当实际参数取值为两个采样值中间的某个值时，对每个顶点进行线性插值，<br>来确定顶点的位置，因此最终能够得到一个处于两种采样网格中间的网格。</p><p>组件的采样数据比较多，包括顶点位置、不透明度、覆盖顺序。因此通过参数控制，不仅能细腻地控制图像组件本身的形状，<br>也可以控制其出现、消失，甚至改变几个组件的覆盖关系。同样，对于两个采样值中间的取值，使用线性插值来确定状态。</p><p>8 例子的源代码<br><a href="https://onedrive.live.com/redir?resid=BF245E76A574F404%2112643" target="_blank" rel="noopener">https://onedrive.live.com/redir?resid=BF245E76A574F404%2112643</a></p>]]></content>
      
      
      <categories>
          
          <category> Live2d </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -原理分析 -live2D </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2018/12/11/test/"/>
      <url>/2018/12/11/test/</url>
      
        <content type="html"><![CDATA[<h1 id="test"><a href="#test" class="headerlink" title="test"></a>test</h1><p><img src="/2018/12/11/test/ku.jpg" alt="啊♀"><br><img src="/2018/12/11/test/test.gif" alt="隐藏测试"></p>]]></content>
      
      
      <categories>
          
          <category> 色图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -色图time </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>酱紫吗</title>
      <link href="/2018/12/07/jiang-zi-ma/"/>
      <url>/2018/12/07/jiang-zi-ma/</url>
      
        <content type="html"><![CDATA[<h1 id="标题一"><a href="#标题一" class="headerlink" title="标题一"></a>标题一</h1><h2 id="标题二"><a href="#标题二" class="headerlink" title="标题二"></a>标题二</h2><h2 id="标题。。算了"><a href="#标题。。算了" class="headerlink" title="标题。。算了"></a>标题。。算了</h2><h2 id="我看你是在刁难我"><a href="#我看你是在刁难我" class="headerlink" title="我看你是在刁难我"></a>我看你是在刁难我</h2><h3 id="色图在左边"><a href="#色图在左边" class="headerlink" title="色图在左边"></a>色图在左边</h3>]]></content>
      
      
      <categories>
          
          <category> 色图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -色图time </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
